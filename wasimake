#!/usr/bin/env python3
"""
wasimake - Helper script for running make with WASI-SDK settings
Similar to emmake for Emscripten
"""

import os
import sys
import shutil
from subprocess import check_call, CalledProcessError

def get_wasi_env():
    wasi_sdk_path = os.getenv('WASI_SDK_PATH', '/opt/wasi-sdk')
    wasi_sysroot = os.path.join(wasi_sdk_path, 'share/wasi-sysroot')
    
    env = os.environ.copy()
    env.update({
        'CC': f"{wasi_sdk_path}/bin/clang --sysroot={wasi_sysroot} --target=wasm32-wasi",
        'CXX': f"{wasi_sdk_path}/bin/clang++ --sysroot={wasi_sysroot} --target=wasm32-wasi",
        'AR': f"{wasi_sdk_path}/bin/llvm-ar",
        'RANLIB': f"{wasi_sdk_path}/bin/llvm-ranlib",
        'PATH': f"{wasi_sdk_path}/bin:{env.get('PATH', '')}",
        'WASI_SDK_PATH': wasi_sdk_path
    })
    return env

def run():
    if len(sys.argv) < 2 or sys.argv[1] in ('--help', '--version'):
        print("""wasimake is a helper for make, setting up WASI-SDK environment.
Usage: wasimake make [FLAGS]""")
        return 1

    args = sys.argv[1:]
    env = get_wasi_env()
    
    try:
        print(f"make: {' '.join(args)}", file=sys.stderr)
        check_call(args, env=env)
        return 0
    except CalledProcessError as e:
        return e.returncode

if __name__ == '__main__':
    sys.exit(run())
