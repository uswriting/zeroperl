#!/usr/bin/env python3
"""
wasimake - WASI make wrapper
Sets up the environment for make to use the WASI SDK compiler
"""
import os
import sys
import shlex
from subprocess import check_call, CalledProcessError

def run():
    if len(sys.argv) < 2 or sys.argv[1] in ('--version', '--help'):
        print('''\
wasimake is a helper for make, setting various environment
variables so that wasic is used. Typical usage:
  wasimake make [FLAGS]
''', file=sys.stderr)
        return 1

    if 'WASI_SDK_PATH' not in os.environ:
        print('Error: WASI_SDK_PATH not set!', file=sys.stderr)
        return 1

    # Get absolute path to our wasic wrapper
    our_path = os.path.dirname(os.path.abspath(__file__))
    wasic_path = os.path.join(our_path, 'wasic')
    
    # Set up the environment for make
    env = os.environ.copy()
    env['CC'] = wasic_path
    env['LD'] = wasic_path
    env['AR'] = os.path.join(env['WASI_SDK_PATH'], 'bin/llvm-ar')
    env['RANLIB'] = os.path.join(env['WASI_SDK_PATH'], 'bin/llvm-ranlib')
    env['PATH'] = our_path + os.pathsep + env.get('PATH', '')

    args = sys.argv[1:]
    print('wasimake: ' + shlex.join(args), file=sys.stderr)
    try:
        check_call(args, env=env)
        return 0
    except CalledProcessError as e:
        return e.returncode

if __name__ == '__main__':
    sys.exit(run())
