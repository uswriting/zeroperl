#!/usr/bin/env python3
"""
wasimake - WASI make wrapper
Sets up the environment for make to use the WASI SDK compiler
"""
import os
import sys
import shlex
from subprocess import check_call, CalledProcessError

def run():
    if len(sys.argv) < 2 or sys.argv[1] in ('--version', '--help'):
        print('''\
wasimake is a helper for make, setting various environment
variables so that wasic is used. Typical usage:
  wasimake make [FLAGS]
''', file=sys.stderr)
        return 1

    if 'WASI_SDK_PATH' not in os.environ:
        print('Error: WASI_SDK_PATH not set!', file=sys.stderr)
        return 1

    # Store original PATH
    old_path = os.environ.get('PATH', '')

    # Point the build system at our wasi compiler wrapper
    os.environ['CC'] = 'wasic'
    os.environ['AR'] = os.path.join(os.environ['WASI_SDK_PATH'], 'bin/llvm-ar')
    os.environ['RANLIB'] = os.path.join(os.environ['WASI_SDK_PATH'], 'bin/llvm-ranlib')
    # Add our directory to PATH so wasic can be found
    os.environ['PATH'] = os.path.abspath(os.path.dirname(sys.argv[0])) + os.pathsep + old_path

    args = sys.argv[1:]
    print('wasimake: ' + shlex.join(args), file=sys.stderr)
    try:
        check_call(args)
        return 0
    except CalledProcessError as e:
        return e.returncode

if __name__ == '__main__':
    sys.exit(run())
