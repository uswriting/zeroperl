diff --git a/pp_sys.c b/pp_sys.c
index 5f8bb0d6ed..5ced32d4fb 100644
--- a/pp_sys.c
+++ b/pp_sys.c
@@ -2271,7 +2271,7 @@ PP_wrapped(pp_syswrite, 0, 1)
         if (MARK >= SP) {
             length = blen;
         } else {
-#if Size_t_size > IVSIZE
+#if Size_t_size > IVSIZE || defined(__wasi__)
             length = (Size_t)SvNVx(*++MARK);
 #else
             length = (Size_t)SvIVx(*++MARK);
@@ -2313,7 +2313,7 @@ PP_wrapped(pp_syswrite, 0, 1)
         goto say_undef;
     SP = ORIGMARK;
 
-#if Size_t_size > IVSIZE
+#if Size_t_size > IVSIZE || defined(__wasi__)
     PUSHn(retval);
 #else
     PUSHi(retval);
@@ -2418,7 +2418,7 @@ PP_wrapped(pp_tell, MAXARG, 0)
         RETURN;
     }
 
-#if LSEEKSIZE > IVSIZE
+#if LSEEKSIZE > IVSIZE || defined(__wasi__)
     PUSHn( (NV)do_tell(gv) );
 #else
     PUSHi( (IV)do_tell(gv) );
@@ -2433,7 +2433,7 @@ PP_wrapped(pp_sysseek, 3, 0)
 {
     dSP;
     const int whence = POPi;
-#if LSEEKSIZE > IVSIZE
+#if LSEEKSIZE > IVSIZE || defined(__wasi__)
     const Off_t offset = (Off_t)SvNVx(POPs);
 #else
     const Off_t offset = (Off_t)SvIVx(POPs);
@@ -2445,7 +2445,7 @@ PP_wrapped(pp_sysseek, 3, 0)
     if (io) {
         const MAGIC * const mg = SvTIED_mg((const SV *)io, PERL_MAGIC_tiedscalar);
         if (mg) {
-#if LSEEKSIZE > IVSIZE
+#if LSEEKSIZE > IVSIZE || defined(__wasi__)
             SV *const offset_sv = newSVnv((NV) offset);
 #else
             SV *const offset_sv = newSViv(offset);
@@ -2464,7 +2464,7 @@ PP_wrapped(pp_sysseek, 3, 0)
             PUSHs(&PL_sv_undef);
         else {
             SV* const sv = sought ?
-#if LSEEKSIZE > IVSIZE
+#if LSEEKSIZE > IVSIZE || defined(__wasi__)
                 newSVnv((NV)sought)
 #else
                 newSViv(sought)
@@ -2486,7 +2486,7 @@ PP_wrapped(pp_truncate, 2, 0)
     /* XXX Configure probe for the length type of *truncate() needed XXX */
     Off_t len;
 
-#if Off_t_size > IVSIZE
+#if Off_t_size > IVSIZE || defined(__wasi__)
     len = (Off_t)POPn;
 #else
     len = (Off_t)POPi;
@@ -3054,6 +3054,48 @@ PP_wrapped(pp_getpeername, 1, 0)
 
 PP_wrapped(pp_stat, !(PL_op->op_flags & OPf_REF), 0)
 {
+    PerlIO_printf(Perl_debug_log,
+                  "=== File Size Configuration ===\n"
+                  "#ifdef HAS_OFF64_T: %d\n"
+                  "#ifdef USE_LARGE_FILES: %d\n"
+                  "#ifdef NO_64_BIT_RAWIO: %d\n"
+                  "#ifdef HAS_FSEEKO: %d\n"
+                  "#ifdef USE_64_BIT_RAWIO: %d\n"
+                  "FSEEKSIZE: %d\n"
+                  "LSEEKSIZE: %d\n"
+                  "Off_t_size: %d\n"
+                  "IVSIZE: %d\n"
+                  "Size_t_size: %d\n",
+#ifdef HAS_OFF64_T
+                  1,
+#else
+                  0,
+#endif
+#ifdef USE_LARGE_FILES
+                  1,
+#else
+                  0,
+#endif
+#ifdef NO_64_BIT_RAWIO
+                  1,
+#else
+                  0,
+#endif
+#ifdef HAS_FSEEKO
+                  1,
+#else
+                  0,
+#endif
+#ifdef USE_64_BIT_RAWIO
+                  1,
+#else
+                  0,
+#endif
+                  FSEEKSIZE,
+                  LSEEKSIZE,
+                  Off_t_size,
+                  IVSIZE,
+                  Size_t_size);
     dSP;
     GV *gv = NULL;
     IO *io = NULL;
@@ -3267,7 +3309,7 @@ PP_wrapped(pp_stat, !(PL_op->op_flags & OPf_REF), 0)
 #else
         PUSHs(newSVpvs_flags("", SVs_TEMP));
 #endif
-#if Off_t_size > IVSIZE
+#if Off_t_size > IVSIZE || defined(__wasi__)
         mPUSHn(PL_statcache.st_size);
 #else
         mPUSHi(PL_statcache.st_size);
@@ -3524,7 +3566,7 @@ PP(pp_ftis)
         dTARGET;
         switch (op_type) {
         case OP_FTSIZE:
-#if Off_t_size > IVSIZE
+#if Off_t_size > IVSIZE || defined(__wasi__)
             sv_setnv(TARG, (NV)PL_statcache.st_size);
 #else
             sv_setiv(TARG, (IV)PL_statcache.st_size);
