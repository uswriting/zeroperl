#!/usr/bin/env python3
"""
wasiconfigure is a helper script that runs ./configure for you,
setting the environment variables to use wasic. Usage:
  wasiconfigure ./configure [FLAGS]
You can also use this for other configure-like stages.
"""
import os
import sys
from subprocess import check_call, CalledProcessError

def run():
    if len(sys.argv) < 2 or sys.argv[1] in ('--version', '--help'):
        print('''\
wasiconfigure is a helper for configure, setting various environment
variables so that wasic etc. are used. Typical usage:
  wasiconfigure ./configure [FLAGS]
(but you can run any command instead of configure)''', file=sys.stderr)
        return 1

    args = sys.argv[1:]
    if 'cmake' in args:
        print('error: wasiconfigure is not intended for cmake projects', file=sys.stderr)
        return 1

    # Set up the environment for configure
    env = os.environ.copy()
    env['CC'] = 'wasic'
    env['AR'] = os.path.join(env.get('WASI_SDK_PATH', '/opt/wasi-sdk'), 'bin/llvm-ar')
    env['RANLIB'] = os.path.join(env.get('WASI_SDK_PATH', '/opt/wasi-sdk'), 'bin/llvm-ranlib')
    
    # Add our directory to PATH so wasic can be found
    env['PATH'] = os.path.abspath(os.path.dirname(sys.argv[0])) + os.pathsep + env.get('PATH', '')

    print('configure: ' + ' '.join(args), file=sys.stderr)
    try:
        check_call(args, env=env)
        return 0
    except CalledProcessError as e:
        return e.returncode

if __name__ == '__main__':
    sys.exit(run())
